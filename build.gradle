buildscript {
	repositories {
		mavenLocal()
		maven {
			credentials {
				username nexusUser
				password nexusPassword
			}
			url esdkSnapshotURL
		}
		maven {
			credentials {
				username nexusUser
				password nexusPassword
			}
			url esdkReleaseURL
		}
	}
	dependencies {
		classpath "de.abas.esdk:gradlePlugin:$version"
	}
}

plugins {
	id "java"
	id "maven-publish"
}

apply plugin: "de.abas.esdk"

static Boolean after2018() {
	def erpVersion = System.getenv("ERP_VERSION")
	if (erpVersion == null || erpVersion == "") {
		return false
	}
	def majorVersion = Integer.parseInt(erpVersion.substring(0, 4))
	return majorVersion >= 2018
}


repositories {
	mavenLocal()
	maven { url "http://$NEXUS_HOST:$NEXUS_PORT/nexus/content/repositories/$NEXUS_NAME" }
	maven { url "http://$NEXUS_HOST:$NEXUS_PORT/nexus/content/repositories/$NEXUS_NAME-SNAPSHOT" }
	mavenCentral()
	maven {
		url esdkSnapshotURL
		credentials {
			username nexusUser
			password nexusPassword
		}
	}
	maven {
		credentials {
			username nexusUser
			password nexusPassword
		}
		url esdkReleaseURL
	}
	maven { url publicReleaseURL }
}

esdk {
	app {
		name = "trainingApp"
		vendorId = "ag"
		appId = "train"
		shared = false
		infosystems = ["IS.OW1.TESTINFO"]
		tables = ["TestDb", "Teil"]
		data = ["data.json"]
		keys = ["2738"]
		enums = ["Importfileformat", "Importfileformat2", "Importfileformat3", "ThenSteps"]
		namedTypes = ["TestRealNamedType"]
		screens = ["Customer:Customer": ["A"], "Sales:BlanketOrder": ["A"], "Operation:Operation": ["A"], "77": ["A"], "Pricing:Pricing": ["A"], "TestDb:TestStructure": ["A"]]
		advancedScreens = ["75": ["A"]]
		essentialsVersions = ["2016r1n00-2016r4n16", "2017r1n00-2017r4n16", "2018r1n00-2018r4n16"]
		preconditions = ["workDirs=ow1"]
		languages = "DEA"
		workdirs = ["ow1", "owbi"]
	}

	abas {
		homeDir = ABAS_HOMEDIR
		clientDir = ABAS_CLIENTDIR
		clientId = ABAS_CLIENTID
		edpHost = EDP_HOST
		edpPort = EDP_PORT.toInteger()
		edpUser = EDP_USER
		edpPassword = EDP_PASSWORD
	}

	nexus {
		nexusHost = NEXUS_HOST
		nexusPort = NEXUS_PORT.toInteger()
		nexusRepoName = NEXUS_NAME
		nexusPassword = NEXUS_PASSWORD
	}

	ssh {
		host = SSH_HOST
		port = SSH_PORT.toInteger()
		user = SSH_USER
		password = SSH_PASSWORD
		key = SSH_KEY
	}
	installType = "SSH"
}

gradle.taskGraph.whenReady {
	esdkAppDocumentation {
		attributes 'productVersion': version.split("-")[0]
	}
}

configurations {
	installer
}

configurations.installer {
	resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
}

group = 'de.abas.esdk.app'
publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId 'de.abas.esdk.app'
			artifactId 'trainingApp'
			artifact createAppJar
		}
	}
	repositories {
		if (project.hasProperty("esdkSnapshotURL") && project.hasProperty("esdkReleaseURL")
				&& project.hasProperty("nexusUser") && project.hasProperty("nexusPassword")) {
			if (version.endsWith('-SNAPSHOT')) {
				maven {
					url esdkSnapshotURL
					credentials {
						username nexusUser
						password nexusPassword
					}
				}
			} else {
				maven {
					url esdkReleaseURL
					credentials {
						username nexusUser
						password nexusPassword
					}
				}
			}
		}
	}
}

task downloadInstaller(type: Copy) {
	dependsOn configurations.installer
	from {
		configurations.installer.singleFile
	}
	into file("${project.buildDir}/installer/")
}

dependencies {
	installer group: "de.abas.esdk", name: "installer", version: version, classifier: "", ext: 'zip',
			changing: true

	provided 'de.abas.homedir:log4j:1.0.0'
	provided 'de.abas.homedir:jedp:1.0.0'
	provided "de.abas.homedir:abas-db-base:1.0.0"
	provided "de.abas.homedir:abas-jfop-runtime-api:1.0.0"
	provided "de.abas.homedir:abas-erp-common:1.0.0"

	implementation "de.abas.homedir:abas-axi2:1.0.0"
	implementation "de.abas.homedir:abas-axi:1.0.0"
	implementation 'de.abas.homedir:abas-db-internal:1.0.0'
	implementation "de.abas.clientdir:abas-db:1.0.0-SNAPSHOT"
	implementation "de.abas.clientdir:abas-db-infosys:1.0.0-SNAPSHOT"
	if (after2018()) {
		println("after 2018")
		implementation "de.abas.clientdir:abas-db-index:1.0.0-SNAPSHOT"
	}

	licensing "de.abas.esdk:client-api:0.0.11:all"

	runtime "de.abas.homedir:commons-collections:1.0.0"
	runtime "de.abas.homedir:abas-jfop-base:1.0.0"

	testImplementation "junit:junit:4.12"
	testImplementation 'org.hamcrest:hamcrest-all:1.3'

	integTestImplementation "de.abas.homedir:abas-db-util:1.0.0"
	integTestImplementation "de.abas.homedir:abas-enums:1.0.0"
	integTestImplementation "de.abas.esdk.test.util:esdk-test-utils:0.0.2"

}
